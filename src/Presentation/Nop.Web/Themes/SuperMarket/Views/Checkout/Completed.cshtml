@model CheckoutCompletedModel
@{
    Layout = "_ColumnsOne";

    //title
    NopHtml.AddTitleParts(T("PageTitle.Checkout").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-checkout-page");
    NopHtml.AppendPageCssClassParts("html-order-completed-page");
}
<div class="page checkout-page order-completed-page">
    <div class="container">
        <div class="text-center">
            <div class="_flex">
                @if (!Model.OnePageCheckoutEnabled)
                {
                    @await Component.InvokeAsync(typeof(CheckoutProgressViewComponent),  new { step = CheckoutProgressStep.Complete })
                }
                <div class="page-title">
                    <h1>@T("Checkout.ThankYou")</h1>
                </div>
                <div class="page-body checkout-data">
                    @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.CheckoutCompletedTop, additionalData = Model })
                    <div class="section order-completed">
                        <div class="successfully-icon"><i class="fa-regular fa-circle-check"></i></div>
                        <div class="title">
                            <strong>@T("Checkout.YourOrderHasBeenSuccessfullyProcessed")</strong>
                        </div>
                        <div class="details">
                            <div class="order-number">
                                <strong>@T("Checkout.OrderNumber"): @Model.CustomOrderNumber</strong>
                            </div>
                            <div class="details-link">
                                <a href="@Url.RouteUrl("OrderDetails", new { orderID = Model.OrderId })">@T("Checkout.PlacedOrderDetails")</a>
                            </div>
                        </div>
                        <div class="buttons">
                            <button type="button" class="button-1 order-completed-continue-button btn btn-primary" onclick="setLocation('@Url.RouteUrl("Homepage")')">@T("Checkout.ThankYou.Continue")</button>
                        </div>
                    </div>
                    @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.CheckoutCompletedBottom, additionalData = Model })
                </div>
            </div>
        </div>
    </div>
</div>
